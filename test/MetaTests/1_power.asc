function power (a,n) {
	if(n == 1)
		return a; 
	else
		return a * power(a, n-1);
}

function isConstant(n) {
	if(typeof(n)=="number" || typeof(n)=="string" || typeof(n)=="bool" )
		return true;
	return false;
}

function isNumberConst(n) {
	if(typeof(n)=="number")
		return true;
	return false;
}

function error(msg){
	return .<print(.~msg)>.;
}

function metaPower (a, n) {
	if (not isConstant(n)) {
		  return .<power(.~a, .~n)>.;
	} else 
	if (not isNumberConst(n))
		  return error(.<"Non integer constant supplied to power\n">.);
 	if (n == 1) {
	    return .~a;
	} else {  
	    return .<.~a * .~metaPower(a, n-1)>.;
	}
}

result1 = metaPower(.<2>., 3);
print(result1, "\n");
print(.!result1, "\n");

result2 = metaPower(.<2>., .<3>.);
print(result2, "\n");
print(.!result2, "\n");

result3 = metaPower(.<2>., "string");
print(result3, "\n");
print(.!result3, "\n");