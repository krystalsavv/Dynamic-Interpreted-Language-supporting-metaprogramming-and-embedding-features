Terminals unused in grammar

   MULTI_LINE_COMMENT
   NESTED_COMMENT
   WRONG_DEFINITION


State 39 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | /* empty */

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr MULTI expr
   17     | expr DIV expr
   18     | expr MOD expr
   19     | expr GREATER expr
   20     | expr GREATER_OR_EQUAL expr
   21     | expr LESS expr
   22     | expr LESS_OR_EQUAL expr
   23     | expr EQUAL expr
   24     | expr NOT_EQUAL expr
   25     | expr AND expr
   26     | expr OR expr
   27     | term
   28     | error

   29 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   30     | MINUS expr
   31     | NOT expr
   32     | INCREMENT lvalue
   33     | lvalue INCREMENT
   34     | DECREMENT lvalue
   35     | lvalue DECREMENT
   36     | primary

   37 assignexpr: lvalue ASSIGN expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   42        | const

   43 lvalue: IDENT
   44       | LOCAL IDENT
   45       | SCOPE IDENT
   46       | member

   47 member: lvalue DOT IDENT
   48       | lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   49       | call DOT IDENT
   50       | call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   52     | lvalue callsuffix
   53     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   57 methodcall: DOUBLE_DOT IDENT LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   58 elist: expr
   59      | elist COMMA expr
   60      | /* empty */

   61 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET
   62          | LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET

   63 indexed: indexedelem
   64        | indexed COMMA indexedelem

   65 $@1: /* empty */

   66 indexedelem: LEFT_BRACKET $@1 expr COLON expr RIGHT_BRACKET

   67 tmp_block: tmp_block stmt
   68          | /* empty */

   69 $@2: /* empty */

   70 block: LEFT_BRACKET $@2 tmp_block RIGHT_BRACKET

   71 $@3: /* empty */

   72 funcdef: FUNCTION IDENT $@3 LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

   73 $@4: /* empty */

   74 funcdef: FUNCTION $@4 LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

   75 const: INTEGER
   76      | REALNUMBER
   77      | STRING
   78      | NIL
   79      | TRUE
   80      | FALSE

   81 idlist: IDENT
   82       | idlist COMMA IDENT
   83       | /* empty */

   84 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   85       | ifstmt ELSE stmt

   86 $@5: /* empty */

   87 whilestmt: WHILE $@5 LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   88 $@6: /* empty */

   89 forstmt: FOR $@6 LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

   90 returnstmt: RETURN SEMICOLON
   91           | RETURN expr SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256) 28
IDENT (258) 43 44 45 47 49 57 72 81 82
INTEGER (259) 75
REALNUMBER (260) 76
STRING (261) 77
MULTI_LINE_COMMENT (262)
NESTED_COMMENT (263)
WHILE (264) 87
FOR (265) 89
IF (266) 84
ELSE (267) 85
FUNCTION (268) 72 74
RETURN (269) 90 91
BREAK (270) 8
CONTINUE (271) 9
AND (272) 25
OR (273) 26
NOT (274) 31
LOCAL (275) 44
TRUE (276) 79
FALSE (277) 80
NIL (278) 78
PLUS (279) 14
MINUS (280) 15 30
UMINUS (281)
ASSIGN (282) 37
MULTI (283) 16
MOD (284) 18
DIV (285) 17
EQUAL (286) 23
NOT_EQUAL (287) 24
INCREMENT (288) 32 33
DECREMENT (289) 34 35
GREATER_OR_EQUAL (290) 20
LESS_OR_EQUAL (291) 22
GREATER (292) 19
LESS (293) 21
LEFT_SQUARE_BRACKET (294) 48 50 61 62
RIGHT_SQUARE_BRACKET (295) 48 50 61 62
LEFT_BRACKET (296) 66 70
RIGHT_BRACKET (297) 66 70
LEFT_PARENTHESIS (298) 29 41 51 53 56 57 72 74 84 87 89
RIGHT_PARENTHESIS (299) 29 41 51 53 56 57 72 74 84 87 89
COMMA (300) 59 64 82
SEMICOLON (301) 3 8 9 12 89 90 91
COLON (302) 66
DOT (303) 47 49
DOUBLE_DOT (304) 57
SCOPE (305) 45
WRONG_DEFINITION (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 1
stmt (54)
    on left: 3 4 5 6 7 8 9 10 11 12, on right: 1 67 84 85 87 89
expr (55)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    3 14 15 16 17 18 19 20 21 22 23 24 25 26 29 30 31 37 48 50 58 59
    66 84 87 89 91
term (56)
    on left: 29 30 31 32 33 34 35 36, on right: 27
assignexpr (57)
    on left: 37, on right: 13
primary (58)
    on left: 38 39 40 41 42, on right: 36
lvalue (59)
    on left: 43 44 45 46, on right: 32 33 34 35 37 38 47 48 52
member (60)
    on left: 47 48 49 50, on right: 46
call (61)
    on left: 51 52 53, on right: 39 49 50 51
callsuffix (62)
    on left: 54 55, on right: 52
normcall (63)
    on left: 56, on right: 54
methodcall (64)
    on left: 57, on right: 55
elist (65)
    on left: 58 59 60, on right: 51 53 56 57 59 61 89
objectdef (66)
    on left: 61 62, on right: 40
indexed (67)
    on left: 63 64, on right: 62 64
indexedelem (68)
    on left: 66, on right: 63 64
$@1 (69)
    on left: 65, on right: 66
tmp_block (70)
    on left: 67 68, on right: 67 70
block (71)
    on left: 70, on right: 10 72 74
$@2 (72)
    on left: 69, on right: 70
funcdef (73)
    on left: 72 74, on right: 11 41 53
$@3 (74)
    on left: 71, on right: 72
$@4 (75)
    on left: 73, on right: 74
const (76)
    on left: 75 76 77 78 79 80, on right: 42
idlist (77)
    on left: 81 82 83, on right: 72 74 82
ifstmt (78)
    on left: 84 85, on right: 4 85
whilestmt (79)
    on left: 87, on right: 5
$@5 (80)
    on left: 86, on right: 87
forstmt (81)
    on left: 89, on right: 6
$@6 (82)
    on left: 88, on right: 89
returnstmt (83)
    on left: 90 91, on right: 7


state 0

    0 $accept: . program $end

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    WHILE                shift, and go to state 6
    FOR                  shift, and go to state 7
    IF                   shift, and go to state 8
    FUNCTION             shift, and go to state 9
    RETURN               shift, and go to state 10
    BREAK                shift, and go to state 11
    CONTINUE             shift, and go to state 12
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_BRACKET         shift, and go to state 22
    LEFT_PARENTHESIS     shift, and go to state 23
    SEMICOLON            shift, and go to state 24
    SCOPE                shift, and go to state 25

    $end  reduce using rule 2 (program)

    program     go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


state 1

   28 expr: error .

    $default  reduce using rule 28 (expr)


state 2

   43 lvalue: IDENT .

    $default  reduce using rule 43 (lvalue)


state 3

   75 const: INTEGER .

    $default  reduce using rule 75 (const)


state 4

   76 const: REALNUMBER .

    $default  reduce using rule 76 (const)


state 5

   77 const: STRING .

    $default  reduce using rule 77 (const)


state 6

   87 whilestmt: WHILE . $@5 LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    $default  reduce using rule 86 ($@5)

    $@5  go to state 43


state 7

   89 forstmt: FOR . $@6 LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    $default  reduce using rule 88 ($@6)

    $@6  go to state 44


state 8

   84 ifstmt: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 45


state 9

   72 funcdef: FUNCTION . IDENT $@3 LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   74        | FUNCTION . $@4 LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    IDENT  shift, and go to state 46

    $default  reduce using rule 73 ($@4)

    $@4  go to state 47


state 10

   90 returnstmt: RETURN . SEMICOLON
   91           | RETURN . expr SEMICOLON

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SEMICOLON            shift, and go to state 48
    SCOPE                shift, and go to state 25

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 11

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


state 12

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


state 13

   31 term: NOT . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 52
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 14

   44 lvalue: LOCAL . IDENT

    IDENT  shift, and go to state 53


state 15

   79 const: TRUE .

    $default  reduce using rule 79 (const)


state 16

   80 const: FALSE .

    $default  reduce using rule 80 (const)


state 17

   78 const: NIL .

    $default  reduce using rule 78 (const)


state 18

   30 term: MINUS . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 19

   32 term: INCREMENT . lvalue

    IDENT             shift, and go to state 2
    LOCAL             shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 55
    SCOPE             shift, and go to state 25

    lvalue  go to state 56
    member  go to state 33
    call    go to state 57


state 20

   34 term: DECREMENT . lvalue

    IDENT             shift, and go to state 2
    LOCAL             shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 55
    SCOPE             shift, and go to state 25

    lvalue  go to state 58
    member  go to state 33
    call    go to state 57


state 21

   61 objectdef: LEFT_SQUARE_BRACKET . elist RIGHT_SQUARE_BRACKET
   62          | LEFT_SQUARE_BRACKET . indexed RIGHT_SQUARE_BRACKET

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_BRACKET         shift, and go to state 59
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    RIGHT_SQUARE_BRACKET  reduce using rule 60 (elist)
    COMMA                 reduce using rule 60 (elist)

    expr         go to state 60
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 61
    objectdef    go to state 35
    indexed      go to state 62
    indexedelem  go to state 63
    const        go to state 38


state 22

   70 block: LEFT_BRACKET . $@2 tmp_block RIGHT_BRACKET

    $default  reduce using rule 69 ($@2)

    $@2  go to state 64


state 23

   29 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   41 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    FUNCTION             shift, and go to state 9
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 66
    const       go to state 38


state 24

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


state 25

   45 lvalue: SCOPE . IDENT

    IDENT  shift, and go to state 67


state 26

    0 $accept: program . $end

    $end  shift, and go to state 68


state 27

    1 program: stmt . program

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    WHILE                shift, and go to state 6
    FOR                  shift, and go to state 7
    IF                   shift, and go to state 8
    FUNCTION             shift, and go to state 9
    RETURN               shift, and go to state 10
    BREAK                shift, and go to state 11
    CONTINUE             shift, and go to state 12
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_BRACKET         shift, and go to state 22
    LEFT_PARENTHESIS     shift, and go to state 23
    SEMICOLON            shift, and go to state 24
    SCOPE                shift, and go to state 25

    $end  reduce using rule 2 (program)

    program     go to state 69
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


state 28

    3 stmt: expr . SEMICOLON
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82
    SEMICOLON         shift, and go to state 83


state 29

   27 expr: term .

    $default  reduce using rule 27 (expr)


state 30

   13 expr: assignexpr .

    $default  reduce using rule 13 (expr)


state 31

   36 term: primary .

    $default  reduce using rule 36 (term)


state 32

   33 term: lvalue . INCREMENT
   35     | lvalue . DECREMENT
   37 assignexpr: lvalue . ASSIGN expr
   38 primary: lvalue .
   47 member: lvalue . DOT IDENT
   48       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   52 call: lvalue . callsuffix

    ASSIGN               shift, and go to state 84
    INCREMENT            shift, and go to state 85
    DECREMENT            shift, and go to state 86
    LEFT_SQUARE_BRACKET  shift, and go to state 87
    LEFT_PARENTHESIS     shift, and go to state 88
    DOT                  shift, and go to state 89
    DOUBLE_DOT           shift, and go to state 90

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


state 33

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


state 34

   39 primary: call .
   49 member: call . DOT IDENT
   50       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   51 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_SQUARE_BRACKET  shift, and go to state 94
    LEFT_PARENTHESIS     shift, and go to state 95
    DOT                  shift, and go to state 96

    $default  reduce using rule 39 (primary)


state 35

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


state 36

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


state 37

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


state 38

   42 primary: const .

    $default  reduce using rule 42 (primary)


state 39

    4 stmt: ifstmt .
   85 ifstmt: ifstmt . ELSE stmt

    ELSE  shift, and go to state 97

    ELSE      [reduce using rule 4 (stmt)]
    $default  reduce using rule 4 (stmt)


state 40

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


state 41

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


state 42

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


state 43

   87 whilestmt: WHILE $@5 . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 98


state 44

   89 forstmt: FOR $@6 . LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 99


state 45

   84 ifstmt: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 100
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 46

   72 funcdef: FUNCTION IDENT . $@3 LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    $default  reduce using rule 71 ($@3)

    $@3  go to state 101


state 47

   74 funcdef: FUNCTION $@4 . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 102


state 48

   90 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 90 (returnstmt)


state 49

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   91 returnstmt: RETURN expr . SEMICOLON

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82
    SEMICOLON         shift, and go to state 103


state 50

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


state 51

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


state 52

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   31 term: NOT expr .

    $default  reduce using rule 31 (term)


state 53

   44 lvalue: LOCAL IDENT .

    $default  reduce using rule 44 (lvalue)


state 54

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   30 term: MINUS expr .

    $default  reduce using rule 30 (term)


state 55

   53 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 9

    funcdef  go to state 104


state 56

   32 term: INCREMENT lvalue .
   47 member: lvalue . DOT IDENT
   48       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   52 call: lvalue . callsuffix

    LEFT_SQUARE_BRACKET  shift, and go to state 87
    LEFT_PARENTHESIS     shift, and go to state 88
    DOT                  shift, and go to state 89
    DOUBLE_DOT           shift, and go to state 90

    $default  reduce using rule 32 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


state 57

   49 member: call . DOT IDENT
   50       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   51 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_SQUARE_BRACKET  shift, and go to state 94
    LEFT_PARENTHESIS     shift, and go to state 95
    DOT                  shift, and go to state 96


state 58

   34 term: DECREMENT lvalue .
   47 member: lvalue . DOT IDENT
   48       | lvalue . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   52 call: lvalue . callsuffix

    LEFT_SQUARE_BRACKET  shift, and go to state 87
    LEFT_PARENTHESIS     shift, and go to state 88
    DOT                  shift, and go to state 89
    DOUBLE_DOT           shift, and go to state 90

    $default  reduce using rule 34 (term)

    callsuffix  go to state 91
    normcall    go to state 92
    methodcall  go to state 93


state 59

   66 indexedelem: LEFT_BRACKET . $@1 expr COLON expr RIGHT_BRACKET

    $default  reduce using rule 65 ($@1)

    $@1  go to state 105


state 60

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   58 elist: expr .

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82

    $default  reduce using rule 58 (elist)


state 61

   59 elist: elist . COMMA expr
   61 objectdef: LEFT_SQUARE_BRACKET elist . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 106
    COMMA                 shift, and go to state 107


state 62

   62 objectdef: LEFT_SQUARE_BRACKET indexed . RIGHT_SQUARE_BRACKET
   64 indexed: indexed . COMMA indexedelem

    RIGHT_SQUARE_BRACKET  shift, and go to state 108
    COMMA                 shift, and go to state 109


state 63

   63 indexed: indexedelem .

    $default  reduce using rule 63 (indexed)


state 64

   70 block: LEFT_BRACKET $@2 . tmp_block RIGHT_BRACKET

    $default  reduce using rule 68 (tmp_block)

    tmp_block  go to state 110


state 65

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   29 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    PLUS               shift, and go to state 72
    MINUS              shift, and go to state 73
    MULTI              shift, and go to state 74
    MOD                shift, and go to state 75
    DIV                shift, and go to state 76
    EQUAL              shift, and go to state 77
    NOT_EQUAL          shift, and go to state 78
    GREATER_OR_EQUAL   shift, and go to state 79
    LESS_OR_EQUAL      shift, and go to state 80
    GREATER            shift, and go to state 81
    LESS               shift, and go to state 82
    RIGHT_PARENTHESIS  shift, and go to state 111


state 66

   41 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 112


state 67

   45 lvalue: SCOPE IDENT .

    $default  reduce using rule 45 (lvalue)


state 68

    0 $accept: program $end .

    $default  accept


state 69

    1 program: stmt program .

    $default  reduce using rule 1 (program)


state 70

   25 expr: expr AND . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 113
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 71

   26 expr: expr OR . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 114
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 72

   14 expr: expr PLUS . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 115
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 73

   15 expr: expr MINUS . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 116
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 74

   16 expr: expr MULTI . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 75

   18 expr: expr MOD . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 76

   17 expr: expr DIV . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 77

   23 expr: expr EQUAL . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 78

   24 expr: expr NOT_EQUAL . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 79

   20 expr: expr GREATER_OR_EQUAL . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 80

   22 expr: expr LESS_OR_EQUAL . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 81

   19 expr: expr GREATER . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 82

   21 expr: expr LESS . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 83

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


state 84

   37 assignexpr: lvalue ASSIGN . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 85

   33 term: lvalue INCREMENT .

    $default  reduce using rule 33 (term)


state 86

   35 term: lvalue DECREMENT .

    $default  reduce using rule 35 (term)


state 87

   48 member: lvalue LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 88

   56 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    RIGHT_PARENTHESIS  reduce using rule 60 (elist)
    COMMA              reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 128
    objectdef   go to state 35
    const       go to state 38


state 89

   47 member: lvalue DOT . IDENT

    IDENT  shift, and go to state 129


state 90

   57 methodcall: DOUBLE_DOT . IDENT LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    IDENT  shift, and go to state 130


state 91

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


state 92

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


state 93

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


state 94

   50 member: call LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 95

   51 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    RIGHT_PARENTHESIS  reduce using rule 60 (elist)
    COMMA              reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 132
    objectdef   go to state 35
    const       go to state 38


state 96

   49 member: call DOT . IDENT

    IDENT  shift, and go to state 133


state 97

   85 ifstmt: ifstmt ELSE . stmt

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    WHILE                shift, and go to state 6
    FOR                  shift, and go to state 7
    IF                   shift, and go to state 8
    FUNCTION             shift, and go to state 9
    RETURN               shift, and go to state 10
    BREAK                shift, and go to state 11
    CONTINUE             shift, and go to state 12
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_BRACKET         shift, and go to state 22
    LEFT_PARENTHESIS     shift, and go to state 23
    SEMICOLON            shift, and go to state 24
    SCOPE                shift, and go to state 25

    stmt        go to state 134
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


state 98

   87 whilestmt: WHILE $@5 LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 135
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 99

   89 forstmt: FOR $@6 LEFT_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    COMMA      reduce using rule 60 (elist)
    SEMICOLON  reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 136
    objectdef   go to state 35
    const       go to state 38


state 100

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   84 ifstmt: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    PLUS               shift, and go to state 72
    MINUS              shift, and go to state 73
    MULTI              shift, and go to state 74
    MOD                shift, and go to state 75
    DIV                shift, and go to state 76
    EQUAL              shift, and go to state 77
    NOT_EQUAL          shift, and go to state 78
    GREATER_OR_EQUAL   shift, and go to state 79
    LESS_OR_EQUAL      shift, and go to state 80
    GREATER            shift, and go to state 81
    LESS               shift, and go to state 82
    RIGHT_PARENTHESIS  shift, and go to state 137


state 101

   72 funcdef: FUNCTION IDENT $@3 . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 138


state 102

   74 funcdef: FUNCTION $@4 LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS block

    IDENT  shift, and go to state 139

    $default  reduce using rule 83 (idlist)

    idlist  go to state 140


state 103

   91 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 91 (returnstmt)


state 104

   53 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 141


state 105

   66 indexedelem: LEFT_BRACKET $@1 . expr COLON expr RIGHT_BRACKET

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 142
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 106

   61 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 61 (objectdef)


state 107

   59 elist: elist COMMA . expr

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 143
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 108

   62 objectdef: LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 62 (objectdef)


state 109

   64 indexed: indexed COMMA . indexedelem

    LEFT_BRACKET  shift, and go to state 59

    indexedelem  go to state 144


state 110

   67 tmp_block: tmp_block . stmt
   70 block: LEFT_BRACKET $@2 tmp_block . RIGHT_BRACKET

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    WHILE                shift, and go to state 6
    FOR                  shift, and go to state 7
    IF                   shift, and go to state 8
    FUNCTION             shift, and go to state 9
    RETURN               shift, and go to state 10
    BREAK                shift, and go to state 11
    CONTINUE             shift, and go to state 12
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_BRACKET         shift, and go to state 22
    RIGHT_BRACKET        shift, and go to state 145
    LEFT_PARENTHESIS     shift, and go to state 23
    SEMICOLON            shift, and go to state 24
    SCOPE                shift, and go to state 25

    stmt        go to state 146
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


state 111

   29 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 29 (term)


state 112

   41 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 147

    $default  reduce using rule 41 (primary)


state 113

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . OR expr

    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82

    $default  reduce using rule 25 (expr)


state 114

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   26     | expr OR expr .

    AND               shift, and go to state 70
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82

    $default  reduce using rule 26 (expr)


state 115

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    MULTI  shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76

    $default  reduce using rule 14 (expr)


state 116

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    MULTI  shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76

    $default  reduce using rule 15 (expr)


state 117

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   16     | expr MULTI expr .
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 16 (expr)


state 118

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   18     | expr MOD expr .
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 18 (expr)


state 119

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   17     | expr DIV expr .
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 17 (expr)


state 120

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   23     | expr EQUAL expr .
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


state 121

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   24     | expr NOT_EQUAL expr .
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


state 122

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   20     | expr GREATER_OR_EQUAL expr .
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    MULTI  shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER           error (nonassociative)
    LESS              error (nonassociative)

    $default  reduce using rule 20 (expr)


state 123

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   22     | expr LESS_OR_EQUAL expr .
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    MULTI  shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER           error (nonassociative)
    LESS              error (nonassociative)

    $default  reduce using rule 22 (expr)


state 124

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   19     | expr GREATER expr .
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    MULTI  shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER           error (nonassociative)
    LESS              error (nonassociative)

    $default  reduce using rule 19 (expr)


state 125

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   21     | expr LESS expr .
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    MULTI  shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76

    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)
    GREATER           error (nonassociative)
    LESS              error (nonassociative)

    $default  reduce using rule 21 (expr)


state 126

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   37 assignexpr: lvalue ASSIGN expr .

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82

    $default  reduce using rule 37 (assignexpr)


state 127

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   48 member: lvalue LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    AND                   shift, and go to state 70
    OR                    shift, and go to state 71
    PLUS                  shift, and go to state 72
    MINUS                 shift, and go to state 73
    MULTI                 shift, and go to state 74
    MOD                   shift, and go to state 75
    DIV                   shift, and go to state 76
    EQUAL                 shift, and go to state 77
    NOT_EQUAL             shift, and go to state 78
    GREATER_OR_EQUAL      shift, and go to state 79
    LESS_OR_EQUAL         shift, and go to state 80
    GREATER               shift, and go to state 81
    LESS                  shift, and go to state 82
    RIGHT_SQUARE_BRACKET  shift, and go to state 148


state 128

   56 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   59 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 149
    COMMA              shift, and go to state 107


state 129

   47 member: lvalue DOT IDENT .

    $default  reduce using rule 47 (member)


state 130

   57 methodcall: DOUBLE_DOT IDENT . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 150


state 131

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   50 member: call LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    AND                   shift, and go to state 70
    OR                    shift, and go to state 71
    PLUS                  shift, and go to state 72
    MINUS                 shift, and go to state 73
    MULTI                 shift, and go to state 74
    MOD                   shift, and go to state 75
    DIV                   shift, and go to state 76
    EQUAL                 shift, and go to state 77
    NOT_EQUAL             shift, and go to state 78
    GREATER_OR_EQUAL      shift, and go to state 79
    LESS_OR_EQUAL         shift, and go to state 80
    GREATER               shift, and go to state 81
    LESS                  shift, and go to state 82
    RIGHT_SQUARE_BRACKET  shift, and go to state 151


state 132

   51 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   59 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 152
    COMMA              shift, and go to state 107


state 133

   49 member: call DOT IDENT .

    $default  reduce using rule 49 (member)


state 134

   85 ifstmt: ifstmt ELSE stmt .

    $default  reduce using rule 85 (ifstmt)


state 135

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   87 whilestmt: WHILE $@5 LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    AND                shift, and go to state 70
    OR                 shift, and go to state 71
    PLUS               shift, and go to state 72
    MINUS              shift, and go to state 73
    MULTI              shift, and go to state 74
    MOD                shift, and go to state 75
    DIV                shift, and go to state 76
    EQUAL              shift, and go to state 77
    NOT_EQUAL          shift, and go to state 78
    GREATER_OR_EQUAL   shift, and go to state 79
    LESS_OR_EQUAL      shift, and go to state 80
    GREATER            shift, and go to state 81
    LESS               shift, and go to state 82
    RIGHT_PARENTHESIS  shift, and go to state 153


state 136

   59 elist: elist . COMMA expr
   89 forstmt: FOR $@6 LEFT_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    COMMA      shift, and go to state 107
    SEMICOLON  shift, and go to state 154


state 137

   84 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    WHILE                shift, and go to state 6
    FOR                  shift, and go to state 7
    IF                   shift, and go to state 8
    FUNCTION             shift, and go to state 9
    RETURN               shift, and go to state 10
    BREAK                shift, and go to state 11
    CONTINUE             shift, and go to state 12
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_BRACKET         shift, and go to state 22
    LEFT_PARENTHESIS     shift, and go to state 23
    SEMICOLON            shift, and go to state 24
    SCOPE                shift, and go to state 25

    stmt        go to state 155
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


state 138

   72 funcdef: FUNCTION IDENT $@3 LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS block

    IDENT  shift, and go to state 139

    $default  reduce using rule 83 (idlist)

    idlist  go to state 156


state 139

   81 idlist: IDENT .

    $default  reduce using rule 81 (idlist)


state 140

   74 funcdef: FUNCTION $@4 LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS block
   82 idlist: idlist . COMMA IDENT

    RIGHT_PARENTHESIS  shift, and go to state 157
    COMMA              shift, and go to state 158


state 141

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 147


state 142

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   66 indexedelem: LEFT_BRACKET $@1 expr . COLON expr RIGHT_BRACKET

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82
    COLON             shift, and go to state 159


state 143

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   59 elist: elist COMMA expr .

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82

    $default  reduce using rule 59 (elist)


state 144

   64 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 64 (indexed)


state 145

   70 block: LEFT_BRACKET $@2 tmp_block RIGHT_BRACKET .

    $default  reduce using rule 70 (block)


state 146

   67 tmp_block: tmp_block stmt .

    $default  reduce using rule 67 (tmp_block)


state 147

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    RIGHT_PARENTHESIS  reduce using rule 60 (elist)
    COMMA              reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 160
    objectdef   go to state 35
    const       go to state 38


state 148

   48 member: lvalue LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 48 (member)


state 149

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 56 (normcall)


state 150

   57 methodcall: DOUBLE_DOT IDENT LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    RIGHT_PARENTHESIS  reduce using rule 60 (elist)
    COMMA              reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 161
    objectdef   go to state 35
    const       go to state 38


state 151

   50 member: call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 50 (member)


state 152

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 51 (call)


state 153

   87 whilestmt: WHILE $@5 LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    WHILE                shift, and go to state 6
    FOR                  shift, and go to state 7
    IF                   shift, and go to state 8
    FUNCTION             shift, and go to state 9
    RETURN               shift, and go to state 10
    BREAK                shift, and go to state 11
    CONTINUE             shift, and go to state 12
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_BRACKET         shift, and go to state 22
    LEFT_PARENTHESIS     shift, and go to state 23
    SEMICOLON            shift, and go to state 24
    SCOPE                shift, and go to state 25

    stmt        go to state 162
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


state 154

   89 forstmt: FOR $@6 LEFT_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 163
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 155

   84 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 84 (ifstmt)


state 156

   72 funcdef: FUNCTION IDENT $@3 LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS block
   82 idlist: idlist . COMMA IDENT

    RIGHT_PARENTHESIS  shift, and go to state 164
    COMMA              shift, and go to state 158


state 157

   74 funcdef: FUNCTION $@4 LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS . block

    LEFT_BRACKET  shift, and go to state 22

    block  go to state 165


state 158

   82 idlist: idlist COMMA . IDENT

    IDENT  shift, and go to state 166


state 159

   66 indexedelem: LEFT_BRACKET $@1 expr COLON . expr RIGHT_BRACKET

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    expr        go to state 167
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


state 160

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   59 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 168
    COMMA              shift, and go to state 107


state 161

   57 methodcall: DOUBLE_DOT IDENT LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS
   59 elist: elist . COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 169
    COMMA              shift, and go to state 107


state 162

   87 whilestmt: WHILE $@5 LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 87 (whilestmt)


state 163

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   89 forstmt: FOR $@6 LEFT_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESIS stmt

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82
    SEMICOLON         shift, and go to state 170


state 164

   72 funcdef: FUNCTION IDENT $@3 LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS . block

    LEFT_BRACKET  shift, and go to state 22

    block  go to state 171


state 165

   74 funcdef: FUNCTION $@4 LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block .

    $default  reduce using rule 74 (funcdef)


state 166

   82 idlist: idlist COMMA IDENT .

    $default  reduce using rule 82 (idlist)


state 167

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULTI expr
   17     | expr . DIV expr
   18     | expr . MOD expr
   19     | expr . GREATER expr
   20     | expr . GREATER_OR_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_OR_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   66 indexedelem: LEFT_BRACKET $@1 expr COLON expr . RIGHT_BRACKET

    AND               shift, and go to state 70
    OR                shift, and go to state 71
    PLUS              shift, and go to state 72
    MINUS             shift, and go to state 73
    MULTI             shift, and go to state 74
    MOD               shift, and go to state 75
    DIV               shift, and go to state 76
    EQUAL             shift, and go to state 77
    NOT_EQUAL         shift, and go to state 78
    GREATER_OR_EQUAL  shift, and go to state 79
    LESS_OR_EQUAL     shift, and go to state 80
    GREATER           shift, and go to state 81
    LESS              shift, and go to state 82
    RIGHT_BRACKET     shift, and go to state 172


state 168

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 53 (call)


state 169

   57 methodcall: DOUBLE_DOT IDENT LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (methodcall)


state 170

   89 forstmt: FOR $@6 LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESIS stmt

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_PARENTHESIS     shift, and go to state 23
    SCOPE                shift, and go to state 25

    RIGHT_PARENTHESIS  reduce using rule 60 (elist)
    COMMA              reduce using rule 60 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 173
    objectdef   go to state 35
    const       go to state 38


state 171

   72 funcdef: FUNCTION IDENT $@3 LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block .

    $default  reduce using rule 72 (funcdef)


state 172

   66 indexedelem: LEFT_BRACKET $@1 expr COLON expr RIGHT_BRACKET .

    $default  reduce using rule 66 (indexedelem)


state 173

   59 elist: elist . COMMA expr
   89 forstmt: FOR $@6 LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 174
    COMMA              shift, and go to state 107


state 174

   89 forstmt: FOR $@6 LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS . stmt

    error                shift, and go to state 1
    IDENT                shift, and go to state 2
    INTEGER              shift, and go to state 3
    REALNUMBER           shift, and go to state 4
    STRING               shift, and go to state 5
    WHILE                shift, and go to state 6
    FOR                  shift, and go to state 7
    IF                   shift, and go to state 8
    FUNCTION             shift, and go to state 9
    RETURN               shift, and go to state 10
    BREAK                shift, and go to state 11
    CONTINUE             shift, and go to state 12
    NOT                  shift, and go to state 13
    LOCAL                shift, and go to state 14
    TRUE                 shift, and go to state 15
    FALSE                shift, and go to state 16
    NIL                  shift, and go to state 17
    MINUS                shift, and go to state 18
    INCREMENT            shift, and go to state 19
    DECREMENT            shift, and go to state 20
    LEFT_SQUARE_BRACKET  shift, and go to state 21
    LEFT_BRACKET         shift, and go to state 22
    LEFT_PARENTHESIS     shift, and go to state 23
    SEMICOLON            shift, and go to state 24
    SCOPE                shift, and go to state 25

    stmt        go to state 175
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


state 175

   89 forstmt: FOR $@6 LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 89 (forstmt)
